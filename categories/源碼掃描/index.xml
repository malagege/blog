<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>源碼掃描 - Category - 程式狂想筆記</title>
        <link>https://malagege.github.io/blog/categories/%E6%BA%90%E7%A2%BC%E6%8E%83%E6%8F%8F/</link>
        <description>源碼掃描 - Category - 程式狂想筆記</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Sun, 31 Jul 2022 00:47:32 &#43;0000</lastBuildDate><atom:link href="https://malagege.github.io/blog/categories/%E6%BA%90%E7%A2%BC%E6%8E%83%E6%8F%8F/" rel="self" type="application/rss+xml" /><item>
    <title>XSS 處理</title>
    <link>https://malagege.github.io/blog/posts/XSS-%E8%99%95%E7%90%86/</link>
    <pubDate>Sun, 31 Jul 2022 00:47:32 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/XSS-%E8%99%95%E7%90%86/</guid>
    <description><![CDATA[<p>前端XSS 問題很難處理，雖然可能有做<code>htmlencode</code>相關處理，但是程式還是會被判有風險。這邊整理一下那些做法。</p>]]></description>
</item>
<item>
    <title>CSP 網頁安全性設計</title>
    <link>https://malagege.github.io/blog/posts/CSP-%E7%B6%B2%E9%A0%81%E5%AE%89%E5%85%A8%E6%80%A7%E8%A8%AD%E8%A8%88/</link>
    <pubDate>Sat, 30 Jul 2022 23:59:52 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/CSP-%E7%B6%B2%E9%A0%81%E5%AE%89%E5%85%A8%E6%80%A7%E8%A8%AD%E8%A8%88/</guid>
    <description><![CDATA[<p>最近把一個專案上到測試環境，明明網站是 http 環境，但是裡面網址竟然顯示 https，我查看原始碼也沒強制加 https，也沒有用<code>&lt;base&gt;</code>改變程式基本位置。</p>]]></description>
</item>
<item>
    <title>Input Path Not Canonicalized 風險</title>
    <link>https://malagege.github.io/blog/posts/Input-Path-Not-Canonicalized-%E9%A2%A8%E9%9A%AA/</link>
    <pubDate>Sat, 30 Jul 2022 23:55:13 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/Input-Path-Not-Canonicalized-%E9%A2%A8%E9%9A%AA/</guid>
    <description><![CDATA[<p>常常遇到一些問題，網路上找到一些方法筆記一下。</p>]]></description>
</item>
<item>
    <title>使用 OWASP Enterprise Security API (ESAPI) 解決 SQL Injection 問題</title>
    <link>https://malagege.github.io/blog/posts/%E4%BD%BF%E7%94%A8-OWASP-Enterprise-Security-API-ESAPI-%E8%A7%A3%E6%B1%BA-SQL-Injection-%E5%95%8F%E9%A1%8C/</link>
    <pubDate>Sun, 13 Feb 2022 22:58:02 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/%E4%BD%BF%E7%94%A8-OWASP-Enterprise-Security-API-ESAPI-%E8%A7%A3%E6%B1%BA-SQL-Injection-%E5%95%8F%E9%A1%8C/</guid>
    <description><![CDATA[<p>參考：</p>
<ul>
<li><a href="https://github.com/ESAPI/esapi-java" target="_blank" rel="noopener noreffer ">GitHub - ESAPI/esapi-java</a></li>
<li><a href="https://www.jianshu.com/p/cab2ba5e5ca5" target="_blank" rel="noopener noreffer ">JAVA 安全编程——ESAPI与OWASP Top 10 - 简书</a></li>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html" target="_blank" rel="noopener noreffer ">SQL Injection Prevention - OWASP Cheat Sheet Series</a></li>
</ul>]]></description>
</item>
</channel>
</rss>
