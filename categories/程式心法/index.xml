<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>程式心法 - Category - 程式狂想筆記</title>
        <link>https://malagege.github.io/blog/categories/%E7%A8%8B%E5%BC%8F%E5%BF%83%E6%B3%95/</link>
        <description>程式心法 - Category - 程式狂想筆記</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Tue, 14 May 2024 21:05:33 &#43;0800</lastBuildDate><atom:link href="https://malagege.github.io/blog/categories/%E7%A8%8B%E5%BC%8F%E5%BF%83%E6%B3%95/" rel="self" type="application/rss+xml" /><item>
    <title>AES 加密過後長度有多少?</title>
    <link>https://malagege.github.io/blog/posts/aes-encryption-length/</link>
    <pubDate>Tue, 14 May 2024 21:05:33 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/aes-encryption-length/</guid>
    <description><![CDATA[<p>在處理數據加密時，我們經常需要考慮到加密後的數據長度。這對於設計資料表和確保資料安全都是非常重要的。在這篇文章中，我將解釋 AES 加密和 Base64 編碼的長度如何計算。</p>]]></description>
</item>
<item>
    <title>探索陣列與字串相似度比較方法</title>
    <link>https://malagege.github.io/blog/posts/exploring-array-and-string-similarity-comparison-methods/</link>
    <pubDate>Sun, 28 Apr 2024 21:08:15 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/exploring-array-and-string-similarity-comparison-methods/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://gist.github.com/assets/6058558/57614585-8a83-46d9-9c64-7dfe71bd4f48" referrerpolicy="no-referrer">
            </div><p>最近要產敏要做相似度功能，目前沒有大數據平台串接，所以用貼標方式去做相似度。但要怎麼做到這個功能，SA 提出用字串串接相似度來判斷，我覺得滿有趣，找出一些網路上案例，看看他們怎麼做。</p>]]></description>
</item>
<item>
    <title>CORS 解決方案：前端如何處理收不到 Response Header 的問題</title>
    <link>https://malagege.github.io/blog/posts/cors-solution-how-frontend-handles-not-receiving-response-header/</link>
    <pubDate>Mon, 01 Apr 2024 23:13:07 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/cors-solution-how-frontend-handles-not-receiving-response-header/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://gist.github.com/assets/6058558/dd62c69d-e398-4c2f-a78b-3b6e90dafe40" referrerpolicy="no-referrer">
            </div><p>最近我設計了一個 OAuth Token 驗證給前端串接，但發現前端無法抓取到我後端的 Response Header。經過一番研究，我發現問題出在 CORS 上。以前我對 CORS 都是簡單了解，沒想到 CORS 規範的內容如此豐富。這篇文章就是我對此進行深入研究的記錄。這篇還一點債了&hellip;</p>
<h2 id="心智圖">心智圖</h2>
<p>因為 mermaid 無法用<code>-</code>，所以用<code>_</code>置換。</p>
<div class="mermaid">mindmap
  Same_Origin Policy
    Origin
        Tuple origin
            schema+host+port
        opaque origin
            file://.../xxx.html
    CORS
        簡單請求
            發送Request不會預檢
            Request會送到Server
            Response 都會檢查 Access_Control_Allow_Origin 
        非簡單請求
            發送Request會預檢
            預檢沒過，Request不會送到Server
            Response 都會檢查 Access_Control_Allow_Origin 
    CORS 容易忽略那些事
        Request 不能隨意帶 Header
        JS不能隨意用 Response Header
    CORS 相關 Header
        Access_Control_Allow_Origin
        Access_Control_Allow_Methods
        Access_Control_Allow_Headers
        Access_Control_Max_Age
        Access_Control_Expose_Headers
        Access_Control_Allow_Credentials
</div><h2 id="origin-header">Origin Header</h2>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Origin" target="_blank" rel="noopener noreffer ">Origin - HTTP | MDN</a></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Origin: null
</span></span><span class="line"><span class="cl">Origin: &lt;scheme&gt;://&lt;hostname&gt;
</span></span><span class="line"><span class="cl">Origin: &lt;scheme&gt;://&lt;hostname&gt;:&lt;port&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>常見我們 AJAX 跨域會看到 HTTP 有 <code>Origin</code> Header 內容。</p>]]></description>
</item>
<item>
    <title>API 規格文件：簡單快速設計工具</title>
    <link>https://malagege.github.io/blog/posts/quick-api-spec-tool/</link>
    <pubDate>Thu, 29 Feb 2024 22:15:03 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/quick-api-spec-tool/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://gist.github.com/assets/6058558/cb234ec0-b9fc-4b98-8fa9-7c2e16cf979a" referrerpolicy="no-referrer">
            </div><p>使用快速規劃 API 規格文件的好處是，它可以幫助開發團隊更有效地溝通和協作。透過清晰的 API 規格文件，團隊成員可以快速了解 API 的功能、輸入和輸出，並且可以更容易地進行開發和測試。此外，API 規格文件還可以提供給其他團隊或合作夥伴，以便他們能夠更好地理解和使用你的 API。</p>]]></description>
</item>
<item>
    <title>JavaScript 如何處理長整數 (long/bigint) 數值的問題</title>
    <link>https://malagege.github.io/blog/posts/JavaScript-%E5%A6%82%E4%BD%95%E8%99%95%E7%90%86%E9%95%B7%E6%95%B4%E6%95%B8-long-bigint-%E6%95%B8%E5%80%BC%E7%9A%84%E5%95%8F%E9%A1%8C/</link>
    <pubDate>Sun, 10 Dec 2023 23:00:31 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/JavaScript-%E5%A6%82%E4%BD%95%E8%99%95%E7%90%86%E9%95%B7%E6%95%B4%E6%95%B8-long-bigint-%E6%95%B8%E5%80%BC%E7%9A%84%E5%95%8F%E9%A1%8C/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://gist.github.com/assets/6058558/2870d81e-04bf-42ff-bb57-97f107462a86" referrerpolicy="no-referrer">
            </div><p>最近發現 JS 無法正常 long (bigint) 數值長度，平常我們會很少用到，之前做報表也不需要吐給前端這個型別資料。但我今天發現這個，在某種情況我們會忽略這個情況。這邊順便做個紀錄。</p>]]></description>
</item>
<item>
    <title>後端和前端做跨時區網站要注意的事</title>
    <link>https://malagege.github.io/blog/posts/%E5%BE%8C%E7%AB%AF%E5%92%8C%E5%89%8D%E7%AB%AF%E5%81%9A%E8%B7%A8%E6%99%82%E5%8D%80%E7%B6%B2%E7%AB%99%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E4%BA%8B/</link>
    <pubDate>Sat, 01 Apr 2023 23:33:56 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/%E5%BE%8C%E7%AB%AF%E5%92%8C%E5%89%8D%E7%AB%AF%E5%81%9A%E8%B7%A8%E6%99%82%E5%8D%80%E7%B6%B2%E7%AB%99%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E4%BA%8B/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/6058558/229299547-9d20c635-b6bf-4e50-826a-3a5d0280fc8e.png" referrerpolicy="no-referrer">
            </div><p>最近使用 .Net 內建 API 回傳物件，他會把 <code>DateTime</code> 轉成 <code>YYYY-mm-ddTHH:MM:ssZ</code>，最近就打算把 Entity 回傳出去給前端，後來發現前端傳給我資料我會少8小時，發現是時區問題，最後前端就先幫我加 8 小時，因為我們網站沒有做跨區問題，所以這邊花點時間我後端要怎麼調整。</p>]]></description>
</item>
<item>
    <title>檔案下載一直抓到舊檔案的問題</title>
    <link>https://malagege.github.io/blog/posts/%E6%AA%94%E6%A1%88%E4%B8%8B%E8%BC%89%E4%B8%80%E7%9B%B4%E6%8A%93%E5%88%B0%E8%88%8A%E6%AA%94%E6%A1%88%E7%9A%84%E5%95%8F%E9%A1%8C/</link>
    <pubDate>Mon, 20 Feb 2023 19:35:03 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/%E6%AA%94%E6%A1%88%E4%B8%8B%E8%BC%89%E4%B8%80%E7%9B%B4%E6%8A%93%E5%88%B0%E8%88%8A%E6%AA%94%E6%A1%88%E7%9A%84%E5%95%8F%E9%A1%8C/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/6058558/220095517-bb805189-bb5d-45cd-b9c4-97d35f1e2278.png" referrerpolicy="no-referrer">
            </div><h2 id="遇到問題">遇到問題</h2>
<p>最近用 .NET Core 做動態依照資料庫使用者會帶過來參數去尋找檔案路徑做回傳下載。下載檔案都是舊版本。我看Console 的 Network 都是 <code>200</code>。也沒有看到 <code>204</code> 抓Cache 的結果。這到底是為什麼呢?今天遇到我覺得要把這個問題找到。</p>
<p>這邊說這麼詳細是怕有各種情境有可能就會有不一樣結果。</p>]]></description>
</item>
<item>
    <title>SameSite Cookie 和 Same Origin Policy 是什麼</title>
    <link>https://malagege.github.io/blog/posts/SameSite-Cookie-%E5%92%8C-Same-Origin-Policy-%E6%98%AF%E4%BB%80%E9%BA%BC/</link>
    <pubDate>Sun, 19 Feb 2023 17:46:57 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/SameSite-Cookie-%E5%92%8C-Same-Origin-Policy-%E6%98%AF%E4%BB%80%E9%BA%BC/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/6058558/219941039-d12d9903-b845-433d-9263-8a82eff5bbed.png" referrerpolicy="no-referrer">
            </div><p>一般我們使用 Ajax 很長遇到跨域問題，之前我們很長設定 <code>CORS</code> 後端坐跨域設定結束這一回合。最近有研究 SSO 登入，有關 cookies 在不同子網域能不能做到 cookies 問題，原本覺得 cookies 是走 origin 的。結果後來發現 cookies 是走 SameSite ，我這邊就馬上惡補一下。結果發現有些東西很重要，但我竟然不知道，這邊簡單筆記一下。不過大致上你沒有要做到跨子網域登入一些東西可能就用不太到。</p>]]></description>
</item>
<item>
    <title>簡單實作測試 SameSite 的規則(Lax,Strict,None)</title>
    <link>https://malagege.github.io/blog/posts/%E7%B0%A1%E5%96%AE%E5%AF%A6%E4%BD%9C%E6%B8%AC%E8%A9%A6-SameSite-%E7%9A%84%E8%A6%8F%E5%89%87-Lax-Strict-None/</link>
    <pubDate>Sun, 19 Feb 2023 17:37:59 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/%E7%B0%A1%E5%96%AE%E5%AF%A6%E4%BD%9C%E6%B8%AC%E8%A9%A6-SameSite-%E7%9A%84%E8%A6%8F%E5%89%87-Lax-Strict-None/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/6058558/219940410-46cd0a17-ff1d-44a5-a964-02f33eb373f3.png" referrerpolicy="no-referrer">
            </div><p>因為測試 SameSite 需要用 https，要怎麼快速實作環境是一個重點。</p>]]></description>
</item>
<item>
    <title>MIME 信件標題亂碼問題</title>
    <link>https://malagege.github.io/blog/posts/MIME-%E4%BF%A1%E4%BB%B6%E6%A8%99%E9%A1%8C%E4%BA%82%E7%A2%BC%E5%95%8F%E9%A1%8C/</link>
    <pubDate>Sun, 31 Jul 2022 02:13:58 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/MIME-%E4%BF%A1%E4%BB%B6%E6%A8%99%E9%A1%8C%E4%BA%82%E7%A2%BC%E5%95%8F%E9%A1%8C/</guid>
    <description><![CDATA[<p>某一天專案升級 Java 8 時候，我專案遇到Email發送標題亂碼，最後找到解決方案。<br>
不過我還深入了解一下，預防下次遇到快速找到真正原因。</p>]]></description>
</item>
</channel>
</rss>
