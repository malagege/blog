<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Python - Category - 程式狂想筆記</title>
        <link>https://malagege.github.io/blog/categories/Python/</link>
        <description>Python - Category - 程式狂想筆記</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Mon, 04 May 2015 07:14:00 &#43;0000</lastBuildDate><atom:link href="https://malagege.github.io/blog/categories/Python/" rel="self" type="application/rss+xml" /><item>
    <title>[Python]Conditional expressions和Generator expressions</title>
    <link>https://malagege.github.io/blog/posts/logdown/2015-05-04-python-conditional-expressions-and-generator-expressions/</link>
    <pubDate>Mon, 04 May 2015 07:14:00 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/logdown/2015-05-04-python-conditional-expressions-and-generator-expressions/</guid>
    <description><![CDATA[<p>之前網路上看到if 和for一行寫法<br>
今天Google找了一下，發現找不到東西<br>
KeyWord:if for one line | if for one statement</p>
<p>最後在Python3文件找到<a href="https://docs.python.org/3/reference/expressions.html" target="_blank" rel="noopener noreffer ">Expressions</a></p>]]></description>
</item>
<item>
    <title>[Python]dict排序筆記</title>
    <link>https://malagege.github.io/blog/posts/logdown/2015-05-04-pythondict-sort-records/</link>
    <pubDate>Mon, 04 May 2015 02:54:00 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/logdown/2015-05-04-pythondict-sort-records/</guid>
    <description><![CDATA[<p>最近突然想到以前有在網路看到Dict做排序<br>
覺得這些以後還用的到<br>
所以記錄一下&hellip;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1">#http://www.saltycrane.com/blog/2007/09/how-to-sort-python-dictionary-by-keys/</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">mydict</span><span class="o">.</span><span class="n">iterkeys</span><span class="p">()):</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span> <span class="s2">&#34;</span><span class="si">%s</span><span class="s2">: </span><span class="si">%s</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">mydict</span><span class="p">[</span><span class="n">key</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">mydict</span><span class="o">.</span><span class="n">iteritems</span><span class="p">(),</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="p">(</span><span class="n">k</span><span class="p">,</span><span class="n">v</span><span class="p">):</span> <span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="n">k</span><span class="p">)):</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span> <span class="s2">&#34;</span><span class="si">%s</span><span class="s2">: </span><span class="si">%s</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>寫成現有method</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1">#http://code.activestate.com/recipes/52306-to-sort-a-dictionary/</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># (IMHO) the simplest approach:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">sortedDictValues1</span><span class="p">(</span><span class="n">adict</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">items</span> <span class="o">=</span> <span class="n">adict</span><span class="o">.</span><span class="n">items</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">items</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">[</span><span class="n">value</span> <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">items</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># an alternative implementation, which</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># happens to run a bit faster for large</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># dictionaries on my machine:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">sortedDictValues2</span><span class="p">(</span><span class="n">adict</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">keys</span> <span class="o">=</span> <span class="n">adict</span><span class="o">.</span><span class="n">keys</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">keys</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">[</span><span class="nb">dict</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">keys</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># a further slight speed-up on my box</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># is to map a bound-method:</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">sortedDictValues3</span><span class="p">(</span><span class="n">adict</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">keys</span> <span class="o">=</span> <span class="n">adict</span><span class="o">.</span><span class="n">keys</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">keys</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nb">map</span><span class="p">(</span><span class="n">adict</span><span class="o">.</span><span class="n">get</span><span class="p">,</span> <span class="n">keys</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1">#http://falldog7.blogspot.com/2009/10/python-dictionary-or-classitemlistsort.html</span>
</span></span><span class="line"><span class="cl">    <span class="n">d</span><span class="o">=</span> <span class="p">[</span> <span class="p">{</span><span class="s1">&#39;id&#39;</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;value&#39;</span><span class="p">:</span><span class="mi">9</span><span class="p">},</span> <span class="p">{</span><span class="s1">&#39;id&#39;</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;value&#39;</span><span class="p">:</span><span class="mi">100</span><span class="p">},</span> <span class="p">{</span><span class="s1">&#39;id&#39;</span><span class="p">:</span><span class="mi">5</span><span class="p">,</span> <span class="s1">&#39;value&#39;</span><span class="p">:</span><span class="mi">99</span><span class="p">},</span> <span class="p">{</span><span class="s1">&#39;id&#39;</span><span class="p">:</span><span class="mi">3</span><span class="p">,</span> <span class="s1">&#39;value&#39;</span><span class="p">:</span><span class="mi">19</span><span class="p">},</span> <span class="p">{</span><span class="s1">&#39;id&#39;</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span> <span class="s1">&#39;value&#39;</span><span class="p">:</span><span class="mi">59</span><span class="p">}</span> <span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="n">d</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span><span class="n">x</span><span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">])</span> <span class="c1">#針對key &#39;id&#39; 做sort</span>
</span></span><span class="line"><span class="cl">    <span class="n">d</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span><span class="n">x</span><span class="p">[</span><span class="s1">&#39;value&#39;</span><span class="p">])</span> <span class="c1">#針對key &#39;value&#39; 做sort</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">#以下用cmp，可以達到上面指定key的效果</span>
</span></span><span class="line"><span class="cl">    <span class="n">d</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">cmp</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">:</span> <span class="n">cmp</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">],</span> <span class="n">y</span><span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">]))</span>
</span></span><span class="line"><span class="cl">    <span class="n">d</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">cmp</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">:</span> <span class="n">cmp</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="s1">&#39;value&#39;</span><span class="p">],</span> <span class="n">y</span><span class="p">[</span><span class="s1">&#39;value&#39;</span><span class="p">]))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">class</span> <span class="nc">data</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">_id</span><span class="p">,</span> <span class="n">_value</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">id</span>    <span class="o">=</span> <span class="n">_id</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">_value</span>
</span></span><span class="line"><span class="cl">    <span class="n">c</span> <span class="o">=</span> <span class="p">[</span> <span class="n">data</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">9</span><span class="p">),</span> <span class="n">data</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">100</span><span class="p">),</span> <span class="n">data</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">99</span><span class="p">),</span> <span class="n">data</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">19</span><span class="p">),</span> <span class="n">data</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">59</span><span class="p">)</span> <span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="n">c</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span><span class="n">x</span><span class="o">.</span><span class="n">id</span><span class="p">)</span><span class="c1">#針對class member id 做sort</span>
</span></span><span class="line"><span class="cl">    <span class="n">c</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span><span class="n">x</span><span class="o">.</span><span class="n">value</span><span class="p">)</span><span class="c1">#針對class member value 做sort</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">#以下用cmp，可以達到上面指定key的效果</span>
</span></span><span class="line"><span class="cl">    <span class="n">c</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">cmp</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">:</span> <span class="n">cmp</span><span class="p">(</span><span class="n">x</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">y</span><span class="o">.</span><span class="n">id</span><span class="p">)</span> <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">c</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">cmp</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">:</span> <span class="n">cmp</span><span class="p">(</span><span class="n">x</span><span class="o">.</span><span class="n">value</span><span class="p">,</span> <span class="n">y</span><span class="o">.</span><span class="n">value</span><span class="p">))</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>資料來源：http://www.dotblogs.com.tw/rickyteng/archive/2011/12/29/63734.aspx</p>]]></description>
</item>
<item>
    <title>[Python]正規化complie用法</title>
    <link>https://malagege.github.io/blog/posts/logdown/2015-04-26-python-the-normalised-complie-usage/</link>
    <pubDate>Sun, 26 Apr 2015 11:43:00 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/logdown/2015-04-26-python-the-normalised-complie-usage/</guid>
    <description><![CDATA[<p><a href="http://www.cnblogs.com/huxi/archive/2010/07/04/1771073.html" target="_blank" rel="noopener noreffer ">http://www.cnblogs.com/huxi/archive/2010/07/04/1771073.html</a></p>]]></description>
</item>
<item>
    <title>[Python]使用pyDes.py動態加密解密</title>
    <link>https://malagege.github.io/blog/posts/logdown/2015-04-26-python-use-pydespy-encryption-and-decryption/</link>
    <pubDate>Sun, 26 Apr 2015 07:55:00 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/logdown/2015-04-26-python-use-pydespy-encryption-and-decryption/</guid>
    <description><![CDATA[<p><a href="https://github.com/toddw-as/pyDes" target="_blank" rel="noopener noreffer ">pyDes Github</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">pyDes</span> <span class="kn">import</span> <span class="o">*</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">base64</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">time</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">random</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">data</span> <span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">random</span><span class="o">.</span><span class="n">random</span><span class="p">())</span><span class="o">+</span><span class="s2">&#34;|&#34;</span><span class="o">+</span><span class="s2">&#34;加密內容&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">k</span> <span class="o">=</span> <span class="n">des</span><span class="p">(</span><span class="s1">&#39;DESCRYPT&#39;</span><span class="p">,</span> <span class="n">CBC</span><span class="p">,</span> <span class="s1">&#39;12345675&#39;</span><span class="p">,</span> <span class="n">pad</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">padmode</span><span class="o">=</span><span class="n">PAD_PKCS5</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">d</span> <span class="o">=</span> <span class="n">k</span><span class="o">.</span><span class="n">encrypt</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span> <span class="s2">&#34;Encrypted: </span><span class="si">%r</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64encode</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span> <span class="s2">&#34;Decrypted: </span><span class="si">%r</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="n">k</span><span class="o">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>[Python]圖片轉成base64碼</title>
    <link>https://malagege.github.io/blog/posts/logdown/2014-11-20-python-picture-converted-to-base64-code/</link>
    <pubDate>Thu, 20 Nov 2014 02:36:00 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/logdown/2014-11-20-python-picture-converted-to-base64-code/</guid>
    <description><![CDATA[<p>實作異常的順力^^</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">base64</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">fp</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;a.jpg&#34;</span><span class="p">,</span><span class="s2">&#34;rb&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">img</span> <span class="o">=</span> <span class="n">fp</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">fp</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">base64</span><span class="o">.</span><span class="n">b64encode</span><span class="p">(</span><span class="n">img</span><span class="p">))</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>在接下來使用requests來實作</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl">	<span class="n">imgdata</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">imgurl</span><span class="p">)</span><span class="o">.</span><span class="n">content</span>
</span></span><span class="line"><span class="cl">	<span class="n">imgb64</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64encode</span><span class="p">(</span><span class="n">imgdata</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>完成:D</p>]]></description>
</item>
<item>
    <title>[Python]文件儲存unicode碼的問題</title>
    <link>https://malagege.github.io/blog/posts/logdown/2014-11-19-python-files-store-unicode-codes-problem/</link>
    <pubDate>Wed, 19 Nov 2014 06:50:00 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/logdown/2014-11-19-python-files-store-unicode-codes-problem/</guid>
    <description><![CDATA[<p>由於用網頁爬蟲抓取的資料存入json<br>
文件都會顯示<code>&quot;{artist&quot;: &quot;\u3058\u3093&quot;}</code><br>
但程式抓取都不會有亂碼的問題</p>
<p>但今天我Google大神一個整天<br>
終於找到方法</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="nb">str</span><span class="o">.</span><span class="n">encode</span><span class="p">()</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;unicode_escape&#39;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>[Python]使用requests、BeautifulSoup當網頁爬蟲</title>
    <link>https://malagege.github.io/blog/posts/logdown/2014-11-18-python-using-beautifulsoup-and-requests-when-crawler/</link>
    <pubDate>Tue, 18 Nov 2014 05:40:00 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/logdown/2014-11-18-python-using-beautifulsoup-and-requests-when-crawler/</guid>
    <description><![CDATA[<p>上次參加COSCUP 2014時候，<a href="http://www.slideshare.net/daikeren/news-37154830" target="_blank" rel="noopener noreffer ">電腦不只會幫你選土豆，還會幫你選新聞</a><br>
最近無聊做個小實驗<br>
使用requests、BeautifulSoup實作抓資料存成json<br>
結果發現不會太難</p>]]></description>
</item>
<item>
    <title>[Python] 查詢本機IP</title>
    <link>https://malagege.github.io/blog/posts/logdown/2014-10-24-python-querying-native-ip/</link>
    <pubDate>Fri, 24 Oct 2014 02:17:00 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/logdown/2014-10-24-python-querying-native-ip/</guid>
    <description><![CDATA[<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">urllib</span><span class="o">,</span><span class="nn">random</span><span class="o">,</span><span class="nn">re</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">ip_regex</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s2">&#34;(([0-9]{1,3}\.)</span><span class="si">{3}</span><span class="s2">[0-9]{1,3})&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">public_ip</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;&#39;&#39; Returns your public IP address.
</span></span></span><span class="line"><span class="cl"><span class="s1">        Output: The IP address in string format.
</span></span></span><span class="line"><span class="cl"><span class="s1">                None if not internet connection available.
</span></span></span><span class="line"><span class="cl"><span class="s1">    &#39;&#39;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># List of host which return the public IP address:</span>
</span></span><span class="line"><span class="cl">    <span class="n">hosts</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;http://www.whatismyip.com/
</span></span></span><span class="line"><span class="cl"><span class="s2">http://adresseip.com
</span></span></span><span class="line"><span class="cl"><span class="s2">http://www.aboutmyip.com/
</span></span></span><span class="line"><span class="cl"><span class="s2">http://www.ipchicken.com/
</span></span></span><span class="line"><span class="cl"><span class="s2">http://www.showmyip.com/
</span></span></span><span class="line"><span class="cl"><span class="s2">http://monip.net/
</span></span></span><span class="line"><span class="cl"><span class="s2">http://checkrealip.com/
</span></span></span><span class="line"><span class="cl"><span class="s2">http://ipcheck.rehbein.net/
</span></span></span><span class="line"><span class="cl"><span class="s2">http://checkmyip.com/
</span></span></span><span class="line"><span class="cl"><span class="s2">http://www.raffar.com/checkip/
</span></span></span><span class="line"><span class="cl"><span class="s2">http://www.thisip.org/
</span></span></span><span class="line"><span class="cl"><span class="s2">http://www.lawrencegoetz.com/programs/ipinfo/
</span></span></span><span class="line"><span class="cl"><span class="s2">http://www.mantacore.se/whoami/
</span></span></span><span class="line"><span class="cl"><span class="s2">http://www.edpsciences.org/htbin/ipaddress
</span></span></span><span class="line"><span class="cl"><span class="s2">http://mwburden.com/cgi-bin/getipaddr
</span></span></span><span class="line"><span class="cl"><span class="s2">http://checkipaddress.com/
</span></span></span><span class="line"><span class="cl"><span class="s2">http://www.glowhost.com/support/your.ip.php
</span></span></span><span class="line"><span class="cl"><span class="s2">http://www.tanziars.com/
</span></span></span><span class="line"><span class="cl"><span class="s2">http://www.naumann-net.org/
</span></span></span><span class="line"><span class="cl"><span class="s2">http://www.godwiz.com/
</span></span></span><span class="line"><span class="cl"><span class="s2">http://checkip.eurodyndns.org/&#34;&#34;&#34;</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">3</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">host</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">hosts</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">results</span> <span class="o">=</span> <span class="n">ip_regex</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="n">urllib</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="n">host</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">200000</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">results</span><span class="p">:</span> <span class="k">return</span> <span class="n">results</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="k">except</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">pass</span> <span class="c1"># Let&#39;s try another host</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="kc">None</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">public_ip</span><span class="p">());</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
</channel>
</rss>
