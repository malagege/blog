<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>gpg - Tag - 程式狂想筆記 - 記錄著我接觸程式藝文</title><link>https://malagege.github.io/blog/tags/gpg/</link><description>gpg - Tag - 程式狂想筆記 - 記錄著我接觸程式藝文</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Sun, 13 Feb 2022 22:45:43 +0000</lastBuildDate><atom:link href="https://malagege.github.io/blog/tags/gpg/" rel="self" type="application/rss+xml"/><item><title>GPG window 路徑與 Git 設定簽章方法</title><link>https://malagege.github.io/blog/posts/GPG-window-%E8%B7%AF%E5%BE%91%E8%88%87-Git-%E8%A8%AD%E5%AE%9A%E7%B0%BD%E7%AB%A0%E6%96%B9%E6%B3%95/</link><pubDate>Sun, 13 Feb 2022 22:45:43 +0000</pubDate><author>malagege</author><guid>https://malagege.github.io/blog/posts/GPG-window-%E8%B7%AF%E5%BE%91%E8%88%87-Git-%E8%A8%AD%E5%AE%9A%E7%B0%BD%E7%AB%A0%E6%96%B9%E6%B3%95/</guid><description><![CDATA[<p>之前<a href="https://malagege.github.io/blog/posts/%E4%BD%BF%E7%94%A8-GitKrakn-GIT-%E7%B0%BD%E7%AB%A0-PGP/" target="_blank" rel="noopener noreffer ">使用 GitKrakn GIT 簽章(PGP) | 程式狂想筆記</a>有紀錄怎麼在GUI(Window)模式快速使用 GPG 簽章，但我最近對 GitKrakn pull幫我做 stash 感到厭煩，所以有找解決方法。<a href="https://www.reddit.com/r/git/comments/9yr5vy/gitkraken_how_to_stop_stash_before_pull/" target="_blank" rel="noopener noreffer ">GitKraken : how to stop stash before pull ? : git</a>裡面有提到換工具或下指令，所以我只能跟 GitKrakn 說掰掰。</p>]]></description></item><item><title>PGP 筆記</title><link>https://malagege.github.io/blog/posts/PGP-%E7%AD%86%E8%A8%98/</link><pubDate>Sun, 11 Apr 2021 23:32:06 +0000</pubDate><author>malagege</author><guid>https://malagege.github.io/blog/posts/PGP-%E7%AD%86%E8%A8%98/</guid><description>第一次使用 PGP加密筆記，原本看到 GPG 跟 Git 做簽章
想說GPG 跟 PGP 應該沒甚麼關係
但是後來爬文一下，GPG(GunPG)是產生和管理 PGP 金鑰軟體
看來有空順便來研究 GIT 簽章
測線上加密網站 https://github.com/Gaff/pgp.help
pgp.help - Modern javascript client-side PGP encryption and decryption tool
SmartNinja Online PGP
5 Online PGP Encryption Websites Free to Encrypt Email, Text
PGPTool - use this tool to encrypt and decrypt PGP files. OpenPGP compatible
測試 pgp 加解密 簡單來講，就次把private key 和 public key 匯入到 gpg
然後使用
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 gpg --import {private/public key} # 加密： # recipient指定接收者的公鑰ID gpg --recipient {keyid/uid} --output encrypt.</description></item></channel></rss>