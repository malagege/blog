<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Kimono - Tag - 程式狂想筆記</title>
        <link>https://malagege.github.io/blog/tags/Kimono/</link>
        <description>Kimono - Tag - 程式狂想筆記</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Sun, 27 Nov 2016 05:25:00 &#43;0000</lastBuildDate><atom:link href="https://malagege.github.io/blog/tags/Kimono/" rel="self" type="application/rss+xml" /><item>
    <title>不用程式寫爬蟲記錄(Kimono Desktop)</title>
    <link>https://malagege.github.io/blog/posts/logdown/2016-11-27-1147900/</link>
    <pubDate>Sun, 27 Nov 2016 05:25:00 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/logdown/2016-11-27-1147900/</guid>
    <description><![CDATA[<p>前幾天看到<a href="http://blog.infographics.tw/2016/11/google-spreadsheet-data-scraping/" target="_blank" rel="noopener noreffer ">無痛爬梳自己來，用 Google Spreadsheet 爬取網頁資料</a><br>
就想之前的Kimono<br>
但現在官網要收掉這個服務<br>
不過有官網友留下kimono desktop edition 離線版程式使用(只有MAC和Windows)<br>
目前不知道有沒有辦法移植到Linux上面玩</p>
<table>
<thead>
<tr>
<th></th>
<th>kimonolabs.com</th>
<th>kimono for desktop</th>
</tr>
</thead>
<tbody>
<tr>
<td>Create APIs with Chrome Ext</td>
<td>v</td>
<td></td>
</tr>
<tr>
<td>Create APIs with Bookmarklet</td>
<td>v</td>
<td>v</td>
</tr>
<tr>
<td>Manage and configure APIs</td>
<td>v</td>
<td>v</td>
</tr>
<tr>
<td>Run APIs manually</td>
<td>v</td>
<td></td>
</tr>
<tr>
<td>Run APIs on a schedule</td>
<td>v</td>
<td></td>
</tr>
<tr>
<td>Cloud hosted API endpoints</td>
<td></td>
<td>v (w/ Firebase)</td>
</tr>
<tr>
<td>Crawling &amp; Pagination</td>
<td>v</td>
<td>v</td>
</tr>
<tr>
<td>Get data behind a login</td>
<td>v</td>
<td>v</td>
</tr>
<tr>
<td>Kimono Apps / Blocks</td>
<td>v</td>
<td></td>
</tr>
<tr>
<td>Google sheets integration</td>
<td>v</td>
<td></td>
</tr>
<tr>
<td>Webhooks &amp; Email alerts</td>
<td>v</td>
<td></td>
</tr>
<tr>
<td>Save scraped data to file</td>
<td>v</td>
<td>v</td>
</tr>
<tr>
<td>CSV &amp; RSS output</td>
<td>v</td>
<td>v</td>
</tr>
</tbody>
</table>
<p>當然離線版沒有這麼多功能，可惜沒有排程可以用<br>
但發現他程式透過NodeJS去寫，好像可以透過API方式去實作<br>
在此先記錄一下筆記</p>]]></description>
</item>
</channel>
</rss>
