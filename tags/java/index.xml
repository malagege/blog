<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Java - Tag - 程式狂想筆記</title>
        <link>https://malagege.github.io/blog/tags/java/</link>
        <description>Java - Tag - 程式狂想筆記</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Sun, 12 Jan 2025 21:30:11 &#43;0800</lastBuildDate><atom:link href="https://malagege.github.io/blog/tags/java/" rel="self" type="application/rss+xml" /><item>
    <title>如何避免程式組 URL 出錯</title>
    <link>https://malagege.github.io/blog/posts/how_to_avoid_url_errors/</link>
    <pubDate>Sun, 12 Jan 2025 21:30:11 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/how_to_avoid_url_errors/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://gist.github.com/user-attachments/assets/42c20617-076d-45c2-b876-a7f663bf2ec5" referrerpolicy="no-referrer">
            </div>前正子專案因為設定檔有人網址會多 / 導致程式一些狀況，公司有人有特別寫組語法方法，這邊我思考正常內建方法可不可以解決這個問題，怎麼沒有人寫好 Library 分享給別人使用？探討有什麼更好方式去解這個問題。
心智圖 mindmap (程式組 Url 方法) 操作 Url 方法 .Net UriBuilder 物件 Java Uri 物件 JavaScript URL 物件 設定 QueryString 方法 .Net NameValueCollection Java MultiValuedMap 非原生 JavaScript URLSearchParams .Net 實作方法 使用 UriBuilder UriBuilder 是一個用於建立和操作 URI 的類別，適用於需要動態生成或修改 URI 的場景。它的用途包括構建 API 請求、處理用戶輸入的 URL、以及在應用程序中動態生成鏈接。相較於單純使用字串來紀錄 URI，它有以下的優點：
安全性：UriBuilder 會自動處理 URI 中的特殊字元和編碼問題，避免了手動操作可能產生的錯誤。 1 2 3 4 5 6 7 8 9 UriBuilder uriBuilder = new UriBuilder { Scheme = &#34;https&#34;, Host = &#34;example.]]></description>
</item>
<item>
    <title>Java HashMap 使用 Foreach 迴圈</title>
    <link>https://malagege.github.io/blog/posts/Java-HashMap-foreach-loop/</link>
    <pubDate>Sun, 09 Oct 2022 22:00:46 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/Java-HashMap-foreach-loop/</guid>
    <description><![CDATA[<p>這篇文章主要是關於如何在 Java 中使用 foreach 迴圈來遍歷 HashMap。我整理一些常用方法，讓我們可以快速使用。</p>]]></description>
</item>
<item>
    <title>Java 處理檔案一些常用筆記</title>
    <link>https://malagege.github.io/blog/posts/Java-%E8%99%95%E7%90%86%E6%AA%94%E6%A1%88%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%AD%86%E8%A8%98/</link>
    <pubDate>Sun, 31 Jul 2022 02:30:03 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/Java-%E8%99%95%E7%90%86%E6%AA%94%E6%A1%88%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%AD%86%E8%A8%98/</guid>
    <description><![CDATA[<p>尚位整理。</p>]]></description>
</item>
<item>
    <title>Java Lambdas 筆記</title>
    <link>https://malagege.github.io/blog/posts/Java-Lambdas-%E7%AD%86%E8%A8%98/</link>
    <pubDate>Sun, 31 Jul 2022 02:27:16 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/Java-Lambdas-%E7%AD%86%E8%A8%98/</guid>
    <description><![CDATA[<p>寫到一半沒寫完。</p>]]></description>
</item>
<item>
    <title>Spring 建立多個連線方法</title>
    <link>https://malagege.github.io/blog/posts/Spring-%E5%BB%BA%E7%AB%8B%E5%A4%9A%E5%80%8B%E9%80%A3%E7%B7%9A%E6%96%B9%E6%B3%95/</link>
    <pubDate>Sun, 31 Jul 2022 02:26:05 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/Spring-%E5%BB%BA%E7%AB%8B%E5%A4%9A%E5%80%8B%E9%80%A3%E7%B7%9A%E6%96%B9%E6%B3%95/</guid>
    <description><![CDATA[<p>有一部分寫到一半沒寫完。</p>]]></description>
</item>
<item>
    <title>Java 簡單JWT方法測試</title>
    <link>https://malagege.github.io/blog/posts/Java-%E7%B0%A1%E5%96%AEJ-WT%E6%96%B9%E6%B3%95%E6%B8%AC%E8%A9%A6/</link>
    <pubDate>Sun, 31 Jul 2022 02:17:12 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/Java-%E7%B0%A1%E5%96%AEJ-WT%E6%96%B9%E6%B3%95%E6%B8%AC%E8%A9%A6/</guid>
    <description><![CDATA[<p>簡單小試。</p>]]></description>
</item>
<item>
    <title>MIME 信件標題亂碼問題</title>
    <link>https://malagege.github.io/blog/posts/MIME-%E4%BF%A1%E4%BB%B6%E6%A8%99%E9%A1%8C%E4%BA%82%E7%A2%BC%E5%95%8F%E9%A1%8C/</link>
    <pubDate>Sun, 31 Jul 2022 02:13:58 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/MIME-%E4%BF%A1%E4%BB%B6%E6%A8%99%E9%A1%8C%E4%BA%82%E7%A2%BC%E5%95%8F%E9%A1%8C/</guid>
    <description><![CDATA[<p>某一天專案升級 Java 8 時候，我專案遇到Email發送標題亂碼，最後找到解決方案。<br>
不過我還深入了解一下，預防下次遇到快速找到真正原因。</p>]]></description>
</item>
<item>
    <title>Java 的 Classpath 程是編譯順序</title>
    <link>https://malagege.github.io/blog/posts/Java-%E7%9A%84-Classpath-%E7%A8%8B%E6%98%AF%E7%B7%A8%E8%AD%AF%E9%A0%86%E5%BA%8F/</link>
    <pubDate>Sun, 31 Jul 2022 02:13:10 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/Java-%E7%9A%84-Classpath-%E7%A8%8B%E6%98%AF%E7%B7%A8%E8%AD%AF%E9%A0%86%E5%BA%8F/</guid>
    <description><![CDATA[<p>我覺得很重要，所以就不寫了。</p>]]></description>
</item>
<item>
    <title>Java Arraylist/array distinct 方法 / 移除 null 方法</title>
    <link>https://malagege.github.io/blog/posts/Java-Arraylist-array-distinct-%E6%96%B9%E6%B3%95-%E7%A7%BB%E9%99%A4-null-%E6%96%B9%E6%B3%95/</link>
    <pubDate>Sun, 31 Jul 2022 02:09:58 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/Java-Arraylist-array-distinct-%E6%96%B9%E6%B3%95-%E7%A7%BB%E9%99%A4-null-%E6%96%B9%E6%B3%95/</guid>
    <description><![CDATA[<p>整理網路文章方法小記。</p>]]></description>
</item>
<item>
    <title>Java Class 動態建立(new)與呼叫方法(call Method)</title>
    <link>https://malagege.github.io/blog/posts/Java-Class-%E5%8B%95%E6%85%8B%E5%BB%BA%E7%AB%8B-new-%E8%88%87%E5%91%BC%E5%8F%AB%E6%96%B9%E6%B3%95-call-Method/</link>
    <pubDate>Sun, 31 Jul 2022 01:58:58 &#43;0000</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/Java-Class-%E5%8B%95%E6%85%8B%E5%BB%BA%E7%AB%8B-new-%E8%88%87%E5%91%BC%E5%8F%AB%E6%96%B9%E6%B3%95-call-Method/</guid>
    <description><![CDATA[每次都會忘記，直接先記錄在這邊。通常是用不到，除非真的需要動態，但不推薦。
相關文章 .class 與 Class
怎麼當鴨子
從 Class 獲取資訊]]></description>
</item>
</channel>
</rss>
