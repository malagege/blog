<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - 程式狂想筆記</title><link>https://malagege.github.io/blog/posts/</link><description>All Posts | 程式狂想筆記</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Sun, 19 Feb 2023 17:46:57 +0800</lastBuildDate><atom:link href="https://malagege.github.io/blog/posts/" rel="self" type="application/rss+xml"/><item><title>SameSite Cookie 和 Same Origin Policy 是什麼</title><link>https://malagege.github.io/blog/posts/SameSite-Cookie-%E5%92%8C-Same-Origin-Policy-%E6%98%AF%E4%BB%80%E9%BA%BC/</link><pubDate>Sun, 19 Feb 2023 17:46:57 +0800</pubDate><author>malagege</author><guid>https://malagege.github.io/blog/posts/SameSite-Cookie-%E5%92%8C-Same-Origin-Policy-%E6%98%AF%E4%BB%80%E9%BA%BC/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/6058558/219941039-d12d9903-b845-433d-9263-8a82eff5bbed.png" referrerpolicy="no-referrer">
            </div><p>一般我們使用 Ajax 很長遇到跨域問題，之前我們很長設定 <code>CORS</code> 後端坐跨域設定結束這一回合。最近有研究 SSO 登入，有關 cookies 在不同子網域能不能做到 cookies 問題，原本覺得 cookies 是走 origin 的。結果後來發現 cookies 是走 SameSite ，我這邊就馬上惡補一下。結果發現有些東西很重要，但我竟然不知道，這邊簡單筆記一下。不過大致上你沒有要做到跨子網域登入一些東西可能就用不太到。</p>]]></description></item><item><title>簡單實作測試 SameSite 的規則(Lax,Strict,None)</title><link>https://malagege.github.io/blog/posts/%E7%B0%A1%E5%96%AE%E5%AF%A6%E4%BD%9C%E6%B8%AC%E8%A9%A6-SameSite-%E7%9A%84%E8%A6%8F%E5%89%87-Lax-Strict-None/</link><pubDate>Sun, 19 Feb 2023 17:37:59 +0800</pubDate><author>malagege</author><guid>https://malagege.github.io/blog/posts/%E7%B0%A1%E5%96%AE%E5%AF%A6%E4%BD%9C%E6%B8%AC%E8%A9%A6-SameSite-%E7%9A%84%E8%A6%8F%E5%89%87-Lax-Strict-None/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/6058558/219940410-46cd0a17-ff1d-44a5-a964-02f33eb373f3.png" referrerpolicy="no-referrer">
            </div><p>因為測試 SameSite 需要用 https，要怎麼快速實作環境是一個重點。</p>]]></description></item><item><title>.Net Core 加上 Serillog</title><link>https://malagege.github.io/blog/posts/Net-Core-%E5%8A%A0%E4%B8%8A-Serillog/</link><pubDate>Sun, 19 Feb 2023 00:43:08 +0800</pubDate><author>malagege</author><guid>https://malagege.github.io/blog/posts/Net-Core-%E5%8A%A0%E4%B8%8A-Serillog/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/6058558/219877745-ec620f05-5f10-4189-b9ec-32513930d154.png" referrerpolicy="no-referrer">
            </div><p>我們公司使用 Serillog，這邊特別去看 Serillog 怎麼使用，這邊我自學的書是教使用 Nlog，下次有機會在筆記。</p>]]></description></item><item><title>Visual Studio Code 在不同專案上裝上各自套件 Extension</title><link>https://malagege.github.io/blog/posts/Visual-Studio-Code-%E5%9C%A8%E4%B8%8D%E5%90%8C%E5%B0%88%E6%A1%88%E4%B8%8A%E8%A3%9D%E4%B8%8A%E5%90%84%E8%87%AA%E5%A5%97%E4%BB%B6-Extension/</link><pubDate>Sun, 19 Feb 2023 00:35:13 +0800</pubDate><author>malagege</author><guid>https://malagege.github.io/blog/posts/Visual-Studio-Code-%E5%9C%A8%E4%B8%8D%E5%90%8C%E5%B0%88%E6%A1%88%E4%B8%8A%E8%A3%9D%E4%B8%8A%E5%90%84%E8%87%AA%E5%A5%97%E4%BB%B6-Extension/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/6058558/219878318-fd049411-76c6-47d1-a76d-8507bcc4b54c.png" referrerpolicy="no-referrer">
            </div><p>我們工程師有時候會寫前端、後端程式，相關裝的套件會不太一樣。像是以前寫 Java 開發的設定會不一樣，我們會複製多個 Eclipse 依照專案做設定和安裝套件，但是 Visual Studio Code 是針對 User使用者帳號，在管理上我們不太可能切換帳號。這邊有找到方法試試。</p>]]></description></item><item><title>2023年欣亞電腦購買記</title><link>https://malagege.github.io/blog/posts/2023%E5%B9%B4%E6%AC%A3%E4%BA%9E%E9%9B%BB%E8%85%A6%E8%B3%BC%E8%B2%B7%E8%A8%98/</link><pubDate>Sat, 18 Feb 2023 22:11:10 +0800</pubDate><author>malagege</author><guid>https://malagege.github.io/blog/posts/2023%E5%B9%B4%E6%AC%A3%E4%BA%9E%E9%9B%BB%E8%85%A6%E8%B3%BC%E8%B2%B7%E8%A8%98/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/6058558/219876863-b231043c-b702-4d17-9d02-005367026f39.png" referrerpolicy="no-referrer">
            </div><p>舊電腦用了8年前，最近朋友看到記憶體有下降，電腦也用了一陣子，是可以換電腦了。這邊特別紀錄 2023 年在欣亞購買電腦心得，順便紀錄購買電腦需要注意的事情。</p>]]></description></item><item><title>.Net Core Identity 令牌驗證與帳號安全</title><link>https://malagege.github.io/blog/posts/Net-Core-Identity-%E4%BB%A4%E7%89%8C%E9%A9%97%E8%AD%89%E8%88%87%E5%B8%B3%E8%99%9F%E5%AE%89%E5%85%A8/</link><pubDate>Mon, 30 Jan 2023 23:00:02 +0800</pubDate><author>malagege</author><guid>https://malagege.github.io/blog/posts/Net-Core-Identity-%E4%BB%A4%E7%89%8C%E9%A9%97%E8%AD%89%E8%88%87%E5%B8%B3%E8%99%9F%E5%AE%89%E5%85%A8/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/6058558/215513894-701f08db-380e-487e-920b-4f82d35af069.png" referrerpolicy="no-referrer">
            </div><p>本篇筆記紀錄使用 Net Core Identity 產生 Token 所做令牌做一些驗證信處理，帳號登入錯誤太多次，我們可以設定安全規則，在多次登入失敗可以封鎖幾分鐘帳號。我們可以產生令牌，令牌是有時效的，超過時間就會過期，這邊令牌非一般 JWT ，他是有 Data Protection API 做一層加密，這邊不會探討這部分。</p>]]></description></item><item><title>.Net Core Identity 做 Authorize</title><link>https://malagege.github.io/blog/posts/DotNet-Core-Identity-%E5%81%9A-Authorize/</link><pubDate>Mon, 16 Jan 2023 21:01:39 +0800</pubDate><author>malagege</author><guid>https://malagege.github.io/blog/posts/DotNet-Core-Identity-%E5%81%9A-Authorize/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/6058558/212697031-de12ff6e-e6a9-476d-a31d-b47625fafca5.png" referrerpolicy="no-referrer">
            </div><p>驗證與授權是很常用在帳號登入權限判斷，<code>驗證(Authientication)</code>和<code>授權(Authorization)</code>要先瞭解這兩個名詞才能順暢了解範例在做什麼。</p>]]></description></item><item><title>.Net Core Identity 帳號與角色關聯刪除</title><link>https://malagege.github.io/blog/posts/DotNet-Core-Identity-%E5%B8%B3%E8%99%9F%E8%88%87%E8%A7%92%E8%89%B2%E9%97%9C%E8%81%AF%E5%88%AA%E9%99%A4/</link><pubDate>Mon, 16 Jan 2023 20:48:35 +0800</pubDate><author>malagege</author><guid>https://malagege.github.io/blog/posts/DotNet-Core-Identity-%E5%B8%B3%E8%99%9F%E8%88%87%E8%A7%92%E8%89%B2%E9%97%9C%E8%81%AF%E5%88%AA%E9%99%A4/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/6058558/212698184-d57b4923-1c58-459f-9ba3-668294da2fed.png" referrerpolicy="no-referrer">
            </div><p>通常我們使用微軟建立好的資料表不會注意他有做那些關聯，功能方便，在使用的時候也需要注意一些事情，這邊特別記錄資料表關聯調整，設定上程式碼需要調整什麼。</p>]]></description></item><item><title>.Net Core Identity 角色管理</title><link>https://malagege.github.io/blog/posts/DotNet-Core-Identity-%E8%A7%92%E8%89%B2%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 16 Jan 2023 20:26:42 +0800</pubDate><author>malagege</author><guid>https://malagege.github.io/blog/posts/DotNet-Core-Identity-%E8%A7%92%E8%89%B2%E7%AE%A1%E7%90%86/</guid><description>&lt;div class="featured-image">
&lt;img src="https://user-images.githubusercontent.com/6058558/212697469-7fb3b705-2dde-4a7d-a409-efa75c0e4f66.png" referrerpolicy="no-referrer">
&lt;/div>我們常常開發程式帳號登入，通常還會做權限功能，這邊很常開發會用角色(Role)這個東西，去做權限劃分，有時候我們需要更細，但系統不一定會做到這樣，但有沒有常見規劃權限方法。
常見權限方法 之前看到 RBAC這個名詞是在 Kubernetes 那邊看到，那時候還沒有深入了解設計理念，最近在看 .Net Core Identity 文章，看到這個框架有做這個非常方便東西，可以瞭解這個是什麼用途。
RBAC 以角色為基礎的存取控制[1][2]（英語：Role-based access control，RBAC），是資訊安全領域中，一種較新且廣為使用的存取控制機制，其不同於強制存取控制以及自由選定存取控制[3]直接賦予使用者權限，而是將權限賦予角色。
以角色為基礎的存取控制模型是一套較強制存取控制以及自由選定存取控制更為中性且更具靈活性的存取控制技術。
參考: 以角色為基礎的存取控制 - 維基百科，自由的百科全書
更多可以看Role-Based Access Control (RBAC). 作者：銀伶 | by I.S. BLOG | Medium。
CBAC Claim 動詞則有宣稱,聲稱, 主張, 自稱, 指控, 認領,索賠等意思
名詞則有權利 , 要求權和聲明等
Claims-based 則是一個專有詞，代表基於聲明的認證(Claims-based identity)
用於Google，Facebook，Microsoft等都有此機制的概念導入
參考: ASP.NET MVC第014天_ASP.NET Identity使用筆記_使用者登入_Claims-based identity理解
網路上比較少介紹 CBAC，簡單它可以分更細權限，這邊帳號可以設定特定角色，但是有時候有例外，像是帳號想把它加上權限上去，透過CBAC就可以設定。但注意 Claim不是只有套用在帳號上面，也可以套用帳號上面。
建立角色 GIT: 建立角色 · malagege/NetCoreAuthSample@578bdd6
RoleManager 可以簡單對 Role 做 CRUD。會新增到 AspNetRoles 資料表。
Controller 注入 RoleManager 建立ModelView Controller 建立Role View 設定 簡單步驟跟之前差不多</description></item><item><title>.Net Core Identity 擴展 User 資料欄位</title><link>https://malagege.github.io/blog/posts/DotNet-Core-Identity-%E6%93%B4%E5%B1%95-User-%E8%B3%87%E6%96%99%E6%AC%84%E4%BD%8D/</link><pubDate>Mon, 16 Jan 2023 20:21:34 +0800</pubDate><author>malagege</author><guid>https://malagege.github.io/blog/posts/DotNet-Core-Identity-%E6%93%B4%E5%B1%95-User-%E8%B3%87%E6%96%99%E6%AC%84%E4%BD%8D/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://user-images.githubusercontent.com/6058558/212698663-241b49b4-882c-4a9e-b888-f2a027e13a3f.png" referrerpolicy="no-referrer">
            </div><p><a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.identity.entityframeworkcore.identityuser?view=aspnetcore-1.1" target="_blank" rel="noopener noreffer ">IdentityUser Class (Microsoft.AspNetCore.Identity.EntityFrameworkCore) | Microsoft Docs</a>裡面我們可以看到有基本欄位，但沒有其他資料，如: 性別、城市和國家等資訊。所以我們需要擴展 User 資料欄位方法。</p>]]></description></item></channel></rss>