<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - 程式狂想筆記</title>
        <link>https://malagege.github.io/blog/posts/</link>
        <description>All Posts | 程式狂想筆記</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Tue, 14 May 2024 21:05:33 &#43;0800</lastBuildDate><atom:link href="https://malagege.github.io/blog/posts/" rel="self" type="application/rss+xml" /><item>
    <title>AES 加密過後長度有多少?</title>
    <link>https://malagege.github.io/blog/posts/aes-encryption-length/</link>
    <pubDate>Tue, 14 May 2024 21:05:33 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/aes-encryption-length/</guid>
    <description><![CDATA[<p>在處理數據加密時，我們經常需要考慮到加密後的數據長度。這對於設計資料表和確保資料安全都是非常重要的。在這篇文章中，我將解釋 AES 加密和 Base64 編碼的長度如何計算。</p>]]></description>
</item>
<item>
    <title>如何在 HTTP 網頁中允許 HTTPS API 呼叫</title>
    <link>https://malagege.github.io/blog/posts/how-to-allow-https-api-calls-in-http-webpages/</link>
    <pubDate>Sun, 28 Apr 2024 21:27:05 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/how-to-allow-https-api-calls-in-http-webpages/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://gist.github.com/assets/6058558/4a1a01a1-47be-4114-88e3-a5619840016f" referrerpolicy="no-referrer">
            </div><p>在開發測試過程中，我們經常會遇到一些內部環境不是 HTTPS 的情況。雖然我們可以通過掛載證書來解決這個問題，但有時候現實的情況並不是我們能完全控制的。因此，我們需要進行一些設定，以便在這些環境下進行開發測試。</p>]]></description>
</item>
<item>
    <title>探索陣列與字串相似度比較方法</title>
    <link>https://malagege.github.io/blog/posts/exploring-array-and-string-similarity-comparison-methods/</link>
    <pubDate>Sun, 28 Apr 2024 21:08:15 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/exploring-array-and-string-similarity-comparison-methods/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://gist.github.com/assets/6058558/57614585-8a83-46d9-9c64-7dfe71bd4f48" referrerpolicy="no-referrer">
            </div><p>最近要產敏要做相似度功能，目前沒有大數據平台串接，所以用貼標方式去做相似度。但要怎麼做到這個功能，SA 提出用字串串接相似度來判斷，我覺得滿有趣，找出一些網路上案例，看看他們怎麼做。</p>]]></description>
</item>
<item>
    <title>如何在 .Net 中處理 JSON 轉換時的過濾特殊字串</title>
    <link>https://malagege.github.io/blog/posts/how-to-handle-special-string-in-json-conversion-in-dotnet/</link>
    <pubDate>Tue, 09 Apr 2024 22:02:32 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/how-to-handle-special-string-in-json-conversion-in-dotnet/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://gist.github.com/assets/6058558/0811b6d8-8780-4654-85e7-ddc7e0ced29e" referrerpolicy="no-referrer">
            </div><p>最近在專案中串接 <a href="https://data.gov.tw/" target="_blank" rel="noopener noreffer ">OpenData</a> 時，遇到了一個問題。某些資料中出現了一些奇怪的符號<code>?</code>，這在資料類型為 float 時會導致程式出錯。在這篇文章中，我將分享我找到的解決這個問題的方法。</p>]]></description>
</item>
<item>
    <title>CORS 解決方案：前端如何處理收不到 Response Header 的問題</title>
    <link>https://malagege.github.io/blog/posts/cors-solution-how-frontend-handles-not-receiving-response-header/</link>
    <pubDate>Mon, 01 Apr 2024 23:13:07 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/cors-solution-how-frontend-handles-not-receiving-response-header/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://gist.github.com/assets/6058558/dd62c69d-e398-4c2f-a78b-3b6e90dafe40" referrerpolicy="no-referrer">
            </div>最近我設計了一個 OAuth Token 驗證給前端串接，但發現前端無法抓取到我後端的 Response Header。經過一番研究，我發現問題出在 CORS 上。以前我對 CORS 都是簡單了解，沒想到 CORS 規範的內容如此豐富。這篇文章就是我對此進行深入研究的記錄。這篇還一點債了&hellip;
心智圖 因為 mermaid 無法用-，所以用_置換。
mindmap Same_Origin Policy Origin Tuple origin schema+host+port opaque origin file://.../xxx.html CORS 簡單請求 發送Request不會預檢 Request會送到Server Response 都會檢查 Access_Control_Allow_Origin 非簡單請求 發送Request會預檢 預檢沒過，Request不會送到Server Response 都會檢查 Access_Control_Allow_Origin CORS 容易忽略那些事 Request 不能隨意帶 Header JS不能隨意用 Response Header CORS 相關 Header Access_Control_Allow_Origin Access_Control_Allow_Methods Access_Control_Allow_Headers Access_Control_Max_Age Access_Control_Expose_Headers Access_Control_Allow_Credentials Origin Header Origin - HTTP | MDN 1 2 3 Origin: null Origin: &lt;scheme&gt;://&lt;hostname&gt; Origin: &lt;scheme&gt;://&lt;hostname&gt;:&lt;port&gt; 常見我們 AJAX 跨域會看到 HTTP 有 Origin Header 內容。]]></description>
</item>
<item>
    <title>探索 Console 進度條的實現方式</title>
    <link>https://malagege.github.io/blog/posts/exploring-console-progress-bar-implementation/</link>
    <pubDate>Mon, 01 Apr 2024 21:59:55 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/exploring-console-progress-bar-implementation/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://gist.github.com/assets/6058558/c9dea196-f447-4f38-854c-1fe59c158e8a" referrerpolicy="no-referrer">
            </div><p>我常常看到指令執行時可以做出進度條效果。雖然裝了 Python 的其他套件就可以做出來，但我這邊找到了一種原生 Console 的做法。我覺得這很有趣，所以特別記錄下來。</p>]]></description>
</item>
<item>
    <title>實作指南：使用 Linux Bridge 連接虛擬網路與設備廢棄</title>
    <link>https://malagege.github.io/blog/posts/connecting-virtual-network-with-various-devices-linux-bridge-implementation/</link>
    <pubDate>Thu, 29 Feb 2024 22:45:27 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/connecting-virtual-network-with-various-devices-linux-bridge-implementation/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://gist.github.com/assets/6058558/ece7b7c4-edc2-468b-b15a-b6cf26387ed5" referrerpolicy="no-referrer">
            </div><p>最近我需要讓 KVM 不透過設定路由，而是直接連接到現有網段。因此，我進一步研究<a href="https://malagege.github.io/blog/posts/%E7%B6%B2%E8%B7%AF%E6%96%B0%E6%89%8B-veth-pair-%E5%AF%A6%E4%BD%9C%E7%AD%86%E8%A8%98/" target="_blank" rel="noopener noreffer ">網路新手虛擬網路設備 veth pair 實作筆記 - 程式狂想筆記</a>這篇文章的主題。在這裡，我將簡單介紹如何操作 Linux Bridge，讓多種端口可以互相連接。</p>]]></description>
</item>
<item>
    <title>API 規格文件：簡單快速設計工具</title>
    <link>https://malagege.github.io/blog/posts/quick-api-spec-tool/</link>
    <pubDate>Thu, 29 Feb 2024 22:15:03 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/quick-api-spec-tool/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://gist.github.com/assets/6058558/cb234ec0-b9fc-4b98-8fa9-7c2e16cf979a" referrerpolicy="no-referrer">
            </div><p>使用快速規劃 API 規格文件的好處是，它可以幫助開發團隊更有效地溝通和協作。透過清晰的 API 規格文件，團隊成員可以快速了解 API 的功能、輸入和輸出，並且可以更容易地進行開發和測試。此外，API 規格文件還可以提供給其他團隊或合作夥伴，以便他們能夠更好地理解和使用你的 API。</p>]]></description>
</item>
<item>
    <title>Docker Compose 強制重啟 Container</title>
    <link>https://malagege.github.io/blog/posts/docker-compose-restart-container/</link>
    <pubDate>Wed, 31 Jan 2024 21:19:08 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/docker-compose-restart-container/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://gist.github.com/assets/6058558/7cd3b5ae-9f68-439d-b08e-1d1e9e4a1c8b" referrerpolicy="no-referrer">
            </div><p>在 Docker Compose 的早期版本中，連續啟動兩次會導致容器重啟，但在某一版之後，這種行為已經被改變。然而，有時我們可能需要手動重啟容器。在這篇文章中，我將介紹如何重啟容器。</p>]]></description>
</item>
<item>
    <title>Entity Framework Core：FromSqlRaw 與 FromSqlInterpolated 的使用與差異</title>
    <link>https://malagege.github.io/blog/posts/entity-framework-core-fromsqlraw-and-fromsqlinterpolated/</link>
    <pubDate>Sun, 28 Jan 2024 21:11:27 &#43;0800</pubDate>
    <author>malagege</author>
    <guid>https://malagege.github.io/blog/posts/entity-framework-core-fromsqlraw-and-fromsqlinterpolated/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://gist.github.com/assets/6058558/9a027353-a969-4a6a-bc93-88d425ffdf8e" referrerpolicy="no-referrer">
            </div><p>Entity Framework Core (EF Core) 是一個開源的、跨平台的資料庫存取技術，它可以讓開發者用 .NET 對資料庫進行操作，而不需要寫 SQL 語句。然而，有時候我們還是需要直接執行 SQL 查詢，這時候 EF Core 提供了 <code>FromSqlRaw</code> 和 <code>FromSqlInterpolated</code> 兩種方法。</p>
<p>這兩種方法的主要差異在於，<code>FromSqlRaw</code> 需要手動參數化查詢，而 <code>FromSqlInterpolated</code> 則會自動參數化查詢。如果不正確使用，可能會使應用程式暴露於 SQL 注入攻擊。</p>
<p>以下是一些使用這兩種方法的例子和解釋：</p>]]></description>
</item>
</channel>
</rss>
